# -*- coding: utf-8 -*-
"""dsci 1302 assignment 2

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rNXxaCX1B9OgWj93Ynef2sKGsXVtR3uV

q1
"""

#Randomly generate a numpy array with 1000 numbers in the shape of (100, 10). The numbers should lie in the range of 1 and 50 inclusive
import numpy as np
arr1 = np.random.randint(1,51,(100,10))
print(arr1)

#calculate the mean, median, max, and standard deviation of all the numbers.
for x in arr1:
  mean = np.mean(arr1)
  median = np.median(arr1)
  max = np.max(arr1)
  std = np.std(arr1)
print(mean)
print(median)
print(max)
print(std)
#calculate the mean, median, max, and standard deviation values of each row.
rows = len(arr1)
for x in range(rows):
  print("row mean:",x,np.mean(arr1[x]))
  print("row median:",x,np.median(arr1[x]))
  print("row max:",x,np.max(arr1[x]))
  print("row std deviation: ",x,np.std(arr1[x]))
  print()
#compare the mean values you got in (1)-(3) with 25. What do you find?
  #all the values seem to be relatively close to the number 25 because the range is from 1 to 50, which means that the halfway point is at 25, so it would make sense as to why the median and mean are consistently close to this number

"""q2"""

from numpy.core.fromnumeric import searchsorted
#Randomly generate a numpy array with 1000 numbers in the shape of (10000,). The numbers should be in the range of 1 and 50 inclusive
arr2 = np.random.randint(1,51,(10000))
print(arr2)
#print the first 10 numbers, the last 10 numbers and the variance
first = arr2[0:10]
last = arr2[10000-10:]
print(first)
print(last)

#calculate the difference of every two adjacent numbers in the array
difference = np.diff(arr2)
print(arr2[:10:])
print(difference[:10:])
print(arr2[-10:])
print(difference[-10:])
#calculate the sum of the difference array that you got in (2).
sum = np.sum(difference)
print(sum)
#sort the original array
sorted = np.sort(arr2)
print(sorted[5000:5100:1])
#print the first 10 numbers, the last 10 numbers and the variance of the sorted array
print(sorted[0:10])
print(sorted[10000-10:])
#calculate the mean, median, max, and standard deviation values of each column
columns = len(arr2)
for x in range(columns):
  print("column mean:",x,np.mean(arr2[x]))
  print("column median:",x,np.median(arr2[x]))
  print("column max:",x,np.max(arr2[x]))
  print("column std deviation: ",x,np.std(arr2[x]))
  print()